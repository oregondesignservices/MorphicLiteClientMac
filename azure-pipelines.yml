# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode
name: $(Year:yy)$(DayOfYear).$(Rev:r)

trigger:
  branches:
    include:
      - master
      - "release/*"
      - "staging/*"

variables:
# must be created in the azure UI under Pipelines > Library and specify accessKey, secretKey, region, and bucket
- group: 's3-public-bucket-upload'
# Provides: P12_PASSWORD, APPLICATION_SIGNING_IDENTITY, INSTALLER_SIGNING_IDENTITY, ALTOOL_USERNAME, ALTOOL_APP_PASSWORD
- group: 'macos-signing'
- name: sdk
  value: macosx11.0
- name: xcodeVersionNum
  value: 12.2
- name: xcodeDeveloperDir
  value: '/Applications/Xcode_12.2.app/Contents/Developer'
- name: configuration
  value: 'Release'
- name: workspacePath
  value: '**/Morphic.xcworkspace'
- name: finalVersion
  value: '1.$(Build.BuildNumber)'
# This means the pipeline will configure all signing options
- name: signingOption
  value: 'default' # this setting uses the builtin project configuration options for signing
- name: extraArgs
  value: 'OTHER_CODE_SIGN_FLAGS="--timestamp" CURRENT_PROJECT_VERSION="$(Build.BuildNumber)"'

pool:
  vmImage: 'macOS-10.15'

steps:
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'raising_the_floor_5AAXYGZ428.p12'
    certPwd: '$(P12_PASSWORD)'  
- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'Morphic_Launcher_for_macOS.provisionprofile'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'Morphic_Community_Launcher_for_macOS.provisionprofile'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'Morphic_Configurator_for_macOS.provisionprofile'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'Morphic_Client_for_macOS.provisionprofile'

- task: Xcode@5
  displayName: Build MorphicCore
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicCore'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicService
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicService'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicSettings
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicSettings'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicConfigurator
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicConfigurator'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicCommunityConfigurator
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicCommunityConfigurator'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicLauncher
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicLauncher'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build MorphicCommunityLauncher
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'MorphicCommunityLauncher'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build Morphic
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'Morphic'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Xcode@5
  displayName: Build Morphic Community
  inputs:
    actions: 'build'
    sdk: $(sdk)
    scheme: 'Morphic Community'
    configuration: '$(configuration)'
    xcWorkspacePath: '$(workspacePath)'
    xcodeVersion: $(xcodeVersionNum)
    xcodeDeveloperDir: $(xcodeDeveloperDir)
    useXcpretty: false
    signingOption: '$(signingOption)'
    args: '$(extraArgs)'
- task: Bash@3
  displayName: Notarize 'Morphic.dmg'
  env:
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    DMG_PATH: './Morphic/Morphic.dmg'
    BUNDLE_ID: 'org.raisingthefloor.Morphic.dmg'
    USERNAME: '$(ALTOOL_USERNAME)'
    APP_PASSWORD: '$(ALTOOL_APP_PASSWORD)'
    SIGNING_IDENTITY: '$(APPLICATION_SIGNING_IDENTITY)'
  inputs:
    targetType: 'filePath'
    filePath: notarize.sh
- task: Bash@3
  displayName: Notarize 'MorphicBasic.pkg'
  env:
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    PKG_PATH: './Morphic/MorphicBasic.pkg'
    BUNDLE_ID: 'org.raisingthefloor.MorphicBasicInstaller.pkg'
    USERNAME: '$(ALTOOL_USERNAME)'
    APP_PASSWORD: '$(ALTOOL_APP_PASSWORD)'
  inputs:
    targetType: 'filePath'
    filePath: notarize.sh  
- task: Bash@3
  displayName: Notarize 'Morphic Community.dmg'
  env:
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    DMG_PATH: './Morphic/Morphic Community.dmg'
    BUNDLE_ID: 'org.raisingthefloor.MorphicCommunity.dmg'
    USERNAME: '$(ALTOOL_USERNAME)'
    APP_PASSWORD: '$(ALTOOL_APP_PASSWORD)'
    SIGNING_IDENTITY: '$(APPLICATION_SIGNING_IDENTITY)'
  inputs:
    targetType: 'filePath'
    filePath: notarize.sh
- task: Bash@3
  displayName: Notarize 'MorphicCommunity.pkg'
  env:
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    PKG_PATH: './Morphic/MorphicCommunity.pkg'
    BUNDLE_ID: 'org.raisingthefloor.MorphicCommunityInstaller.pkg'
    USERNAME: '$(ALTOOL_USERNAME)'
    APP_PASSWORD: '$(ALTOOL_APP_PASSWORD)'
  inputs:
    targetType: 'filePath'
    filePath: notarize.sh
- task: Bash@3
  displayName: Publish Morphic to AWS S3
  env:
    AWS_ACCESS_KEY_ID: $(accessKey)
    AWS_SECRET_ACCESS_KEY: $(secretKey)
    BUCKET: $(bucket)
    AWS_DEFAULT_REGION: $(region)
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    LOCAL_DMG: './Morphic/Morphic.dmg'
    LOCAL_PKG: './Morphic/MorphicBasic.pkg'
    AWS_FILE_PREFIX: 'MorphicBasic'
    VERSION: '$(finalVersion)'
  inputs:
    targetType: 'filePath'
    filePath: push-to-s3.sh
- task: Bash@3
  displayName: Publish Morphic Community to AWS S3
  env:
    AWS_ACCESS_KEY_ID: $(accessKey)
    AWS_SECRET_ACCESS_KEY: $(secretKey)
    BUCKET: $(bucket)
    AWS_DEFAULT_REGION: $(region)
    BRANCH: $(Build.SourceBranch)
    BRANCH_NAME: $(Build.SourceBranchName)
    LOCAL_DMG: './Morphic/Morphic Community.dmg'
    LOCAL_PKG: './Morphic/MorphicCommunity.pkg'
    AWS_FILE_PREFIX: 'MorphicCommunity'
    VERSION: '$(finalVersion)'
  inputs:
    targetType: 'filePath'
    filePath: push-to-s3.sh
